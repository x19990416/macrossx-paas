/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

version='1.0-SNAPSHOT'

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api group: 'org.apache.shiro', name: 'shiro-spring', version: '1.7.1'
    api group: 'com.auth0', name: 'java-jwt', version: '3.12.1'
    // https://mvnrepository.com/artifact/org.crazycake/shiro-redis
    //api group: 'org.crazycake', name: 'shiro-redis', version: '3.3.1'
    api group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: springbootStarterVersion
    api group: 'com.github.whvcse', name: 'easy-captcha', version: '1.6.2'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    api project(':modules:module-jpa')
    api project(':modules:module-common')
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
